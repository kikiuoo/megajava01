package 클래스;

public class 내방 {

	public static void main(String[] args) {
		
		폰틀 폰틀1 = new 폰틀();
		폰틀1.기종 = "삼성";
		폰틀1.색 = "검정";
		폰틀1.전화를받다();
		폰틀1.폰을켜다();
		System.out.println(폰틀1.기종);
		System.out.println("-----------");
		
		폰틀 폰틀2 = new 폰틀();
		폰틀2.기종 = "lg";
		폰틀2.색 = "노랑";
		폰틀2.전화를받다();
		폰틀2.폰을켜다();
		System.out.println("-----------");
		
		소녀틀 소녀틀1 = new 소녀틀();
		소녀틀1.머리길이 = "길다";
		소녀틀1.피부색 = "하양";
		소녀틀1.머리가길다();
		소녀틀1.피부가하얗다();
		System.out.println("-----------");
		
		소녀틀 소녀틀2 = new 소녀틀();
		소녀틀2.머리길이 = "짧다";
		소녀틀2.피부색 = "검정";
		소녀틀2.머리가길다();
		소녀틀2.피부가하얗다();
		System.out.println("-----------");


				
		
	// new를 하면 클래스의 멤버변수들이  ram에 복사가 된다.
	//  클래스    객체
		//	      주소값   	주소값만 있으면 매소드를 사용할 수 있다.
		// new는 키를 야예 새로 만들어버린거다. 키를 틀을 가지고 찍어낸거..		
		붕어빵틀 붕어빵1 = new 붕어빵틀();
		붕어빵1.두께 = "두껍게";
		붕어빵1.소 = "팥";		
		붕어빵1.붕어빵을먹다();
		붕어빵1.붕어빵을담다();
		System.out.println("--------------");
		
		붕어빵틀 붕어빵2 = new 붕어빵틀();
		붕어빵2.두께 = "얇게";
		붕어빵2.소 = "생크림";		
		붕어빵2.붕어빵을먹다();
		붕어빵2.붕어빵을담다();
		System.out.println("--------------");
		
		// 내 방에 강아지가 한마리 필요.
		강아지 dog = new 강아지();
		dog.age = 5;
		dog.color = " 노랑";
		dog.꼬리를흔들다();
		dog.사람을잘따른다(); 
	}

}
