package 캐스팅;

public class 기본형캐스팅 {

	public static void main(String[] args) {
		byte a = 100; //1바이트  int의 4분의 1
		int b = 120; //4바이트
		b = a; //a의 값을 b에다 복사해서 넣어라. 큰<-작 : 큰것으로 자동변환해서 들어간다.
				// int에다 bite를 넣으면 int로 형변환된다.(자동형변환)
				//형변환을 영어로 캐스팅(casting)이라고 부른다.
		
		// a = b; // 작은거에다 큰거를 넣으면 : 작은것으로 강제변환해서 들어간다.
				//byte <- int (강제형변환)
				// a = (byte)b; 로 소괄호 넣어서 사용해야 한다.
		// 부품들의 변환이다보니까 타입이 안맞는 경우에 크기를 조율해야 할 때가 있다.
		//모든 부품이 형변환을 지원하는것은 아니다.
		//클래스간 형변환은 상속관계에 있을 때만 가능하다.
		//부모클래스와 자식클래스 간만 형변환이 가능하다.
		//component:부모클래스, JButton :자식클래스
		//클래스간에 크고, 작다는 무엇으로 판단하는가가 중요하다.
		//부모가 크고, 자식이 작다.
		//component c = new Component();
		//JButton b = new JButton();
		//c = b; 큰<-작 : 자동형변환, 업캐스팅
		//b = (JButton)c; 작<-큰 : 강제형변환, 다운캐스팅
		
		//add(Component c) <- b, l, t 
		//: 고급오버로딩 (다형성)
		//: 업캐스팅을 통해서 다형성을 구현한다. 
		
		
		
	
		
	}

}
